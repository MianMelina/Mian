

Private Sub UserForm_Initialize()
    ' Initialisierung der UserForm ohne Verzögerung
    Me.Caption = ""
    
    ' Status des ToggleButtons laden
    LoadToggleButtonState
    
    ' Überprüfen, ob der ToggleButton aktiviert ist
    If Not Me.ToggleButton1.Value Then
        ' Timer starten, um die PDF-Suche nach dem Öffnen zu beginnen
        Application.OnTime Now + TimeValue("00:00:01"), "StartPdfSearch"
    End If
End Sub

Private Sub UserForm_QueryClose(Cancel As Integer, CloseMode As Integer)
    ' Status des ToggleButtons speichern, wenn die UserForm geschlossen wird
    SaveToggleButtonState
End Sub

Private Sub ToggleButton1_Click()
    ' Wenn der ToggleButton geändert wird, den Status speichern
    SaveToggleButtonState
    
    ' Überprüfen, ob der ToggleButton aktiviert oder deaktiviert wurde
    If Me.ToggleButton1.Value Then
        ' PDF-Suche deaktiviert
    Else
        ' PDF-Suche aktiviert
        StartPdfSearch
    End If
End Sub




Sub StartPdfSearch()
    Dim baseFolderPath As String
    Dim subFolderNames() As String
    Dim subFolderName As String
    Dim subFolderPath As String
    Dim newestFile As String
    Dim I As Integer
    Dim listBoxItems() As String
    Dim listBoxName As String
    
    ' Initialisierung
    baseFolderPath = "\Pool 2024\" ' Basisordner angeben
    subFolderNames = Split("01 Januar,02 Februar,03 März,04 April,05 Mai,06 Juni,07 Juli,08 August,09 September,10 Oktober,11 November,12 Dezember", ",")
    
    ' Initialisiere das Array für die ListBox-Einträge
    ReDim listBoxItems(LBound(subFolderNames) To UBound(subFolderNames))
    
    ' Schleife durch alle angegebenen Unterordnernamen
    For I = LBound(subFolderNames) To UBound(subFolderNames)
        subFolderName = subFolderNames(I)
        subFolderPath = baseFolderPath & subFolderName
        
        ' Holen des neuesten PDF-Dateinamens
        newestFile = GetNewestPdfFileUsingDir(subFolderPath)
        
        ' Speichern des Dateinamens oder der Fehlermeldung im Array
        If newestFile <> "" Then
            listBoxItems(I) = newestFile
        Else
            listBoxItems(I) = "Keine PDF-Dateien gefunden oder Ordner nicht gefunden"
        End If
        
        ' Erstellen des ListBox-Namens
        listBoxName = "ListBox" & (I + 1)
        
        ' Überprüfen, ob die ListBox existiert, bevor der Eintrag hinzugefügt wird
        On Error Resume Next
        If Not verwaltung.Controls(listBoxName) Is Nothing Then
            verwaltung.Controls(listBoxName).AddItem listBoxItems(I)
        End If
        On Error GoTo 0
        
        ' Kurze Pause, um die UI reaktionsfähig zu halten
        DoEvents
    Next I
End Sub

Private Function GetNewestPdfFileUsingDir(folderPath As String) As String
    On Error GoTo ErrorHandler
    
    Dim fileName As String
    Dim fileDate As Date
    Dim latestDate As Date
    Dim newestFile As String
    
    latestDate = 0
    newestFile = ""
    
    ' Verwende Dir, um durch die Dateien zu schleifen
    fileName = Dir(folderPath & "\*.pdf")
    
    Do While fileName <> ""
        fileDate = FileDateTime(folderPath & "\" & fileName)
        If fileDate > latestDate Then
            latestDate = fileDate
            newestFile = fileName
        End If
        fileName = Dir
    Loop
    
    GetNewestPdfFileUsingDir = newestFile
    Exit Function
    
ErrorHandler:
    GetNewestPdfFileUsingDir = ""
End Function

' Funktion zum Speichern des ToggleButton-Status
Sub SaveToggleButtonState()
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("Settings")
    On Error GoTo 0
    
    ' Falls das Arbeitsblatt nicht existiert, wird es erstellt
    If ws Is Nothing Then
        Set ws = ThisWorkbook.Sheets.Add
        ws.Name = "Settings"
    End If
    
    ' Status des ToggleButtons speichern
    ws.Range("A1").Value = verwaltung.ToggleButton1.Value
End Sub

' Funktion zum Laden des ToggleButton-Status
Sub LoadToggleButtonState()
    Dim ws As Worksheet
    On Error Resume Next
    Set ws = ThisWorkbook.Sheets("Settings")
    On Error GoTo 0
    
    ' Überprüfen, ob das Arbeitsblatt existiert und der gespeicherte Wert vorhanden ist
    If Not ws Is Nothing Then
        If IsEmpty(ws.Range("A1").Value) Then
            verwaltung.ToggleButton1.Value = False ' Standardwert
        Else
            verwaltung.ToggleButton1.Value = ws.Range("A1").Value
        End If
    Else
        verwaltung.ToggleButton1.Value = False ' Standardwert, falls das Blatt nicht existiert
    End If
End Sub

